%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV) (equal for both cameras after stereo rectification)
Camera.fx: 476.5276506138121
Camera.fy: 477.5658674099076
Camera.cx: 322.13201141536763
Camera.cy: 251.6888047500246

Camera.k1: -0.42043079243082415
Camera.k2: 0.17943796968267525
Camera.p1: 0.001076434028030149
Camera.p2: 0.0001262795742828665

Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 10.0

# stereo baseline times fx  = 0.12 x 476.52765
Camera.bf: 57.1833180737

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 35 # 35

# Transformation from camera 0 to body-frame (imu)
Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [-0.001827859233177992, -0.999909119974655, 0.013357047657805154, 0.030298330137844887,
            0.0039387461853423456, -0.013364165204938133, -0.9999029379729119, 0.028682372533570984,
            0.9999905725601166, -0.0017750717969459706, 0.003962816044752765, -0.014747523214162677,
            0.0, 0.0, 0.0, 1.0]

# IMU noise
IMU.NoiseGyro: 0.005 # 1.6968e-04 
IMU.NoiseAcc: 0.05 # 2.0000e-3
IMU.GyroWalk: 1e-4 
IMU.AccWalk: 1e-2 # 3.0000e-3
IMU.Frequency: 100

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 480
LEFT.width: 640
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-0.42043079243082415, 0.17943796968267525, 0.001076434028030149, 0.0001262795742828665, 0.0]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [476.5276506138121, 0.0, 322.13201141536763, 0.0, 477.5658674099076, 251.6888047500246, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00, 1.000000e+00]
LEFT.Rf:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.999966347530033, -0.001422739138722922, 0.008079580483432283, 0.001365741834644127, 0.9999741760894847, 0.007055629199258132, -0.008089410156878961, -0.007044357138835809, 0.9999424675829176]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [476.5276506138121, 0, 322.13201141536763, 0,  0, 477.5658674099076, 251.6888047500246, 0,  0, 0, 1, 0]

RIGHT.height: 480
RIGHT.width: 640
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data:[-0.39917090467699634, 0.14291611576969254, 0.0014625341710505651, -0.00039552081000661826, 0.0]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [476.5276506138121, 0.0, 322.13201141536763, 0.0, 477.5658674099076, 251.6888047500246, 0.0, 0.0, 1.0]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00, 1.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00, 1.000000e+00]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [476.5276506138121, 0, 322.13201141536763, -47.90639384423901, 0, 477.5658674099076, 251.6888047500246, 0, 0, 0, 1, 0]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 15 # 20
ORBextractor.minThFAST: 5 # 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500

